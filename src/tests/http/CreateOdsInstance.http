
### Authenticate with KeyCloak
# @name adminTokenKeyCloak
POST https://localhost/auth/realms/myrealm/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type=password&username=myuser&password=SomePassword&client_id=ac

###
@admin_token={{adminTokenKeyCloak.response.body.$.access_token}}
@auth_header_admin_token=Authorization: bearer {{adminTokenKeyCloak.response.body.$.access_token}}

### Create the AdminConsole instance
# @name adminConsoleInstance
POST https://localhost/adminapi/adminconsole/odsInstances
Content-Type: application/json
{{auth_header_admin_token}}
Tenant: tenant1

{
  "tenantId": 1,
  "tenantName": "tenant1",
  "name": "Instancetest1",
  "instanceType": "enterprise",
  "odsInstanceContexts": [
    {
      "contextKey": "schoolYearFromRoute",
      "contextValue": "2024"
    }
  ],
  "odsInstanceDerivatives": [
    {
      "derivativeType": "ReadReplica"
    }
  ]
}

### Get pending instances
# @name pendingOdsInstances
GET https://localhost/adminapi/adminconsole/odsInstances?status=pending
{{auth_header_admin_token}}
Tenant: tenant1

### Get completed instances
# @name completedOdsInstances
GET https://localhost/adminapi/adminconsole/odsInstances?status=completed
{{auth_header_admin_token}}
Tenant: tenant1

### Get pending instances
# @name pendingInstances
GET https://localhost/adminapi/adminconsole/Instances?status=pending
{{auth_header_admin_token}}
Tenant: tenant1

### Get completed instances
# @name completedInstances
GET https://localhost/adminapi/adminconsole/Instances?status=completed
{{auth_header_admin_token}}
Tenant: tenant1
